from flask import Flask, request, abort
from linebot import LineBotApi, WebhookHandler
from linebot.models import MessageEvent, TextMessage, TextSendMessage, TemplateSendMessage, ButtonsTemplate, MessageAction,ConfirmTemplate,CarouselTemplate, CarouselColumn,FlexSendMessage
import mysql.connector

app = Flask(__name__)

# ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Line Bot
channel_access_token = 'LrNhBjORvm+h1SsEOcwznThZrIpm0y6ZRe/bogFD+ay2c+EbeVf0qLr1P53sCs+APukq/bdIH04ay/QQTSoO23IS4NM0ubq65sFozCePKGhGiawW9cQ0EoULNXvpflgh0hJphhE1+QK3KowHBONOEgdB04t89/1O/w1cDnyilFU='
channel_secret = '3e756664e46445ccd4dc313e2b37237f'

# ‡∏™‡∏£‡πâ‡∏≤‡∏á LineBotApi ‡πÅ‡∏•‡∏∞ WebhookHandler
line_bot_api = LineBotApi(channel_access_token)
handler = WebhookHandler(channel_secret)

# ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ MySQL Database
conn = mysql.connector.connect(
    host="100.124.147.43",
    user="admin",
    password="admin",
    database="projects"
)

@app.route("/callback", methods=['POST'])
def callback():
    # ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Webhook
    signature = request.headers['X-Line-Signature']
    body = request.get_data(as_text=True)
    
    try:
        handler.handle(body, signature)
    except Exception as e:
        print(f"Error: {e}")
        abort(400)

    return 'OK'

save = None

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö
@handler.add(MessageEvent, message=TextMessage)
def handle_message(event):
    global save  # ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ save ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô global
    user_message = event.message.text.strip()
    # if event.source.type == 'user':  # ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô user
    #     line_bot_api.push_message(
    #         '@335kkxwf',  # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô LINE ID ‡∏Ç‡∏≠‡∏á user
    #         TextSendMessage(text=f'User says: {user_message}')
    #     )
    # elif event.source.type == 'group' or event.source.type == 'room':  # ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô admin
    #     line_bot_api.push_message(
    #         '@873ppksc',  # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô LINE ID ‡∏Ç‡∏≠‡∏á admin
    #         TextSendMessage(text=f'Admin says: {user_message}')
    #     )

    if user_message == "‡∏•‡∏≤‡∏ô‡∏à‡∏≠‡∏î‡∏£‡∏ñ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î":
        cursor = conn.cursor()
        cursor.execute("SELECT * FROM `parkinglot`")
        park = cursor.fetchall()
        # cursor.close()  # ‡∏õ‡∏¥‡∏î cursor ‡πÄ‡∏Å‡πà‡∏≤
        print(park)
        carousel_columns = []
        
        for space in park:
            # ‡∏™‡∏£‡πâ‡∏≤‡∏á action ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏∞‡∏Å‡∏î
            action = MessageAction(label='‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•', text=f'‡∏•‡∏≤‡∏ô‡∏à‡∏≠‡∏î‡∏£‡∏ñ {space[7]}')  # ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° ‡∏à‡∏∞‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡∏µ‡πâ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤
            save = space[7]
            carousel_column = CarouselColumn(
                thumbnail_image_url='https://i.ytimg.com/vi/mdw6UNfz9Og/maxresdefault.jpg',  # URL ‡∏Ç‡∏≠‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
                title=f'‡∏•‡∏≤‡∏ô‡∏à‡∏≠‡∏î‡∏£‡∏ñ: {space[7]}',
                text='üìç ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡∏•‡∏≤‡∏ô‡∏à‡∏≠‡∏î‡∏£‡∏ñ',
                actions=[action]  
            )
            carousel_columns.append(carousel_column)

        carousel_template = CarouselTemplate(columns=carousel_columns)

        line_bot_api.reply_message(
            event.reply_token,
            TemplateSendMessage(
                alt_text='‡∏•‡∏≤‡∏ô‡∏à‡∏≠‡∏î‡∏£‡∏ñ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î',
                template=carousel_template
            )
        )
        cursor.close()  # ‡∏õ‡∏¥‡∏î cursor ‡πÄ‡∏Å‡πà‡∏≤

    else:
        if "‡∏•‡∏≤‡∏ô‡∏à‡∏≠‡∏î‡∏£‡∏ñ" in user_message:
            print(save)
            save = user_message.replace("‡∏•‡∏≤‡∏ô‡∏à‡∏≠‡∏î‡∏£‡∏ñ ", "")
            cursor = conn.cursor()
            query = "SELECT * FROM `parkinglot` WHERE `ParkingLot_Name` = %s;"
            cursor.execute(query, (save,))
            park_status = cursor.fetchall()
            flex_message = FlexSendMessage(
                alt_text=f'üöó ‡∏•‡∏≤‡∏ô‡∏à‡∏≠‡∏î‡∏£‡∏ñ: {save}\nüìä ‡∏ß‡πà‡∏≤‡∏á: {park_status[0][2]} ‡∏ä‡πà‡∏≠‡∏á‡∏à‡∏≠‡∏î',
                contents={
                    "type": "bubble",
                    "body": {
                        "type": "box",
                        "layout": "vertical",
                        "contents": [
                            {
                                "type": "text",
                                "text": f"üöó ‡∏•‡∏≤‡∏ô‡∏à‡∏≠‡∏î‡∏£‡∏ñ: {save}",
                                "weight": "bold",
                                "size": "xxl",
                                "align": "center",
                                "color": "#FF0000",  # ‡∏™‡∏µ‡πÅ‡∏î‡∏á‡πÄ‡∏Ç‡πâ‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô
                                "margin": "md"
                            },
                            {
                                "type": "separator",
                                "margin": "lg",
                                "color": "#CCCCCC"
                            },
                            {
                                "type": "box",
                                "layout": "horizontal",
                                "contents": [
                                    {
                                        "type": "text",
                                        "text": "üîì ‡∏ß‡πà‡∏≤‡∏á: ",
                                        "size": "lg",
                                        "align": "center",
                                        "color": "#000000",
                                        "flex": 1
                                    },
                                    {
                                        "type": "text",
                                        "text": f"{park_status[0][2]} ‡∏ä‡πà‡∏≠‡∏á‡∏à‡∏≠‡∏î",
                                        "size": "lg",
                                        "align": "center",
                                        "weight": "bold",
                                        "color": "#32CD32",  # ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏™‡∏î‡πÉ‡∏™‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á
                                        "flex": 1
                                    }
                                ],
                                "margin": "lg"
                            }
                        ]
                    },
                }
            )

            line_bot_api.reply_message(
                event.reply_token,
                flex_message
            )
        if user_message == '‡∏ß‡πà‡∏≤‡∏á':
            print(f'in elif {save}')
            if save == None:
                flex_message = FlexSendMessage(
                    alt_text=f'‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏•‡∏≤‡∏ô‡∏à‡∏≠‡∏î‡∏£‡∏ñ‡∏Å‡πà‡∏≠‡∏ô',
                    contents={
                        "type": "bubble",
                        "body": {
                            "type": "box",
                            "layout": "vertical",
                            "contents": [
                                {
                                    "type": "text",
                                    "text": f"‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏•‡∏≤‡∏ô‡∏à‡∏≠‡∏î‡∏£‡∏ñ‡∏Å‡πà‡∏≠‡∏ô",
                                    "weight": "bold",
                                    "size": "xl",
                                    "align": "center",
                                    "color": "#FF0000"
                                }
                            ]
                        }
                    }
                )
            else:
                print(f'in esle {save}')
                cursor = conn.cursor()
                query = "SELECT * FROM `parkinglot` WHERE `ParkingLot_Name` = %s;"
                cursor.execute(query, (save,))
                park_status = cursor.fetchall()
                print(park_status)
                flex_message = FlexSendMessage(
                alt_text=f'üöó ‡∏•‡∏≤‡∏ô‡∏à‡∏≠‡∏î‡∏£‡∏ñ: {save}\nüìä ‡∏ß‡πà‡∏≤‡∏á: {park_status[0][2]} ‡∏ä‡πà‡∏≠‡∏á‡∏à‡∏≠‡∏î',
                contents={
                    "type": "bubble",
                    "body": {
                        "type": "box",
                        "layout": "vertical",
                        "contents": [
                            {
                                "type": "text",
                                "text": f"üöó ‡∏•‡∏≤‡∏ô‡∏à‡∏≠‡∏î‡∏£‡∏ñ: {save}",
                                "weight": "bold",
                                "size": "xxl",
                                "align": "center",
                                "color": "#FF0000",  # ‡∏™‡∏µ‡πÅ‡∏î‡∏á‡πÄ‡∏Ç‡πâ‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô
                                "margin": "md"
                            },
                            {
                                "type": "separator",
                                "margin": "lg",
                                "color": "#CCCCCC"
                            },
                            {
                                "type": "box",
                                "layout": "horizontal",
                                "contents": [
                                    {
                                        "type": "text",
                                        "text": "üîì ‡∏ß‡πà‡∏≤‡∏á: ",
                                        "size": "lg",
                                        "align": "center",
                                        "color": "#000000",
                                        "flex": 1
                                    },
                                    {
                                        "type": "text",
                                        "text": f"{park_status[0][2]} ‡∏ä‡πà‡∏≠‡∏á‡∏à‡∏≠‡∏î",
                                        "size": "lg",
                                        "align": "center",
                                        "weight": "bold",
                                        "color": "#32CD32",  # ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏™‡∏î‡πÉ‡∏™‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á
                                        "flex": 1
                                    }
                                ],
                                "margin": "lg"
                            }
                        ]
                    },
                }
            )
            
            line_bot_api.reply_message(
                event.reply_token,
                flex_message
            )
        else:
            print(save)
            flex_message = FlexSendMessage(
                    alt_text=f'‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏•‡∏≤‡∏ô‡∏à‡∏≠‡∏î‡∏£‡∏ñ‡∏Å‡πà‡∏≠‡∏ô',
                    contents={
                        "type": "bubble",
                        "body": {
                            "type": "box",
                            "layout": "vertical",
                            "contents": [
                                {
                                    "type": "text",
                                    "text": '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏•‡∏≤‡∏ô‡∏à‡∏≠‡∏î‡∏£‡∏ñ‡∏Å‡πà‡∏≠‡∏ô',
                                    "weight": "bold",
                                    "size": "xl",
                                    "align": "center",
                                    "color": "#FF0000"
                                }
                            ]
                        }
                    }
                )
            line_bot_api.reply_message(
                event.reply_token,
                flex_message
            )
    cursor.close()  # ‡∏õ‡∏¥‡∏î cursor ‡πÄ‡∏Å‡πà‡∏≤
        


# ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ô Flask
if __name__ == "__main__":
    app.run(port=5000)




